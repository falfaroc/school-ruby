commit 59175f3f80f4c0c540edf8145b7f06acae65cc9a
Author: Fernando Campos <fcampos@ztr.com>
Date:   Fri Sep 22 14:11:47 2017 -0400

    RPT:i001 30 minutes
    
    Installing Ruby and configuring BitBucket on Windows.
    Also, testing transferring files.

commit b8d206c5189448d3892d873d852aac910f5fdcda
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Fri Sep 22 14:56:48 2017 -0400

    RPT: i002 25 minutes
    
    Installing gem and bundler on my Linux Box

commit acc62bf6304625408ac314222ed409b7231bccfd
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Mon Sep 25 22:43:21 2017 -0400

    RPT: i002 15
    
    Install gem, bundler and Gemfile on Windows.

commit 01548fa0ed71e476be8bca3fdc8f1fe4c476a445
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Tue Sep 26 10:46:42 2017 -0400

    RPT: r001 30
    
    Began by testing the magic_ball exampleto ensure that minitest works correctly.
    After seeing minitest work, I moved count_down to this directory and began modifying
    it to complete step one.
    
    Within the 30 minutes, I was able to complete Step one. Reading the different assertions
    took a bit to figure out which assertion is best.

commit b70ffe4471d53d2760e7f2b5601b5fa804142b9d
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Tue Sep 26 11:32:50 2017 -0400

    RPT: r001 30
    
    Completed Step two from the list. Installing reek on windows took a bit longer
    because 'gem install reek' did not work so I had to go and download the
    missing dependancies. After I had reek installed, figuring out the different errors
    and looking up how to fix them took sometime.

commit 87afe31ccb02bcac217bc44065ca3c30ed76b9e1
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Tue Sep 26 13:37:54 2017 -0400

    RPT: r001 30
    
    Complete steps three, four and five. Understanding the tasks is a bit
    challenging, better clarity would be ideal.

commit 44558e96c90fccf22b195e6ae9beb47453e9ecbe
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Wed Sep 27 12:14:26 2017 -0400

    RPT: r001 30
    
    Complete steps six, seven, eight. This consists of creating the timeInterval
    method which throws an UncommunicativeMethodName warning by reek. Splitting
    the one file to three different files and creating the log array.
    
    One issue that I kept dealing with is the warnings thrown by reek. Many
    I can solve by reading the documentation but some are very ambiguous such as,
    UtilityFunction.

commit b367a79e231291612871ca715e5af98db5f6019c
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Wed Sep 27 13:19:58 2017 -0400

    RPT: r001 30
    
    Did not fully complete step 9. Created the new methods but not working
    correctly. Running into assertion issues and bad comparison.
    
    Description of the task unclear. What does time_log return, time sent by
    print or time calculated by Time.now? Also, messages seperated by 1 second
    when 60 second intervals has been done in the past.

commit 08cd945a6da582f4300619780a57d9dccf5f5bf4
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Mon Oct 2 21:31:54 2017 -0400

    RPT: r002 25
    
    Reading the requirements for r002. Setting up checkout.rb and checkout_test.rb.
    Resolving the two errors so they are only warnings now. Running reek on checkout.rb
    and ensuring that there is no code smell.
    
    Since we are not modifying checkout_test.rb, not resolving the code smell pointed
    out by reek. Working on setting the rules.

commit 03886073392a9f1ae9a8d04aa1e1bdd266292db3
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Mon Oct 2 22:09:06 2017 -0400

    RPT: r002 30
    
    Modified the hash table to be a nested hash table so it handles the
    discounts differently. Created a Discount class for the specific
    discount per item.
    
    Looking into why my totals variable does not reset on object initialization.
    Next, modifying the totals calculation.

commit d033a9aee61bf8c87965096bb18f51b866e807dd
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Mon Oct 2 23:00:43 2017 -0400

    RPT: r002 30
    
    Fixed the attribute issue between objects. Created a hash that will count
    the number of each item inputted.
    
    Calculating the correct total value is next.
    
    Learning about hash and working with them took a bit of time.

commit bd26e2feebf3d5fabdb63ac9ce2748b593990a6e
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Tue Oct 3 10:25:15 2017 -0400

    RPT: r002 30
    
    Solved why certain variables were being overwritten. Learned the difference
    between global variables and instance variables. Modified the hash table
    that keeps track of the BasePrice class and Discount class.
    
    Need to run reek on the modified code to ensure there is no code smell.
    Fixing those will take sometime.

commit ca6fe4efd8b1473881cdb81ca74951b2b8f0f33c
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Tue Oct 3 10:50:03 2017 -0400

    RPT: r002 20
    
    Modified program to pass all the test cases. Incorrect calculation being
    done.
    
    Learned what attr_reader does and helps so that I do not have to implement
    that function.
    
    Going to run reek and begin fixing the code smell throughout the program.

commit 2ad3c3bfc5c23a55d880925201ae591623417ecf
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Tue Oct 3 15:02:01 2017 -0400

    RPT: r002 30
    
    Fixed all the warnings thrown by reek. Seperated the multiple method calls
    into their own functions.
    Basically, once the core logic was ironed out, all the test cases ran and
    passed.
    
    Task is done, might continue to clean up code. Will work and try to finish
    previous steps in r001.

commit 65be36098f94482482aad4fd1bc58ed2a90f14f5
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Wed Oct 4 21:31:05 2017 -0400

    RPT: r001 26
    
    Modified the variables in the print class to be instance
    variables and that fixed many of the incorrect value issues.
    
    No problems completing step 9 after fixing the statement above.

commit dc2916957aced115d75b466cf6621bae3d567c53
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 12:47:48 2017 -0400

    RPT: r003 30
    
    Set up the environment to use rspec instead of minitest.
    Obtain all the files needed to proceed with this task.
    
    Downloaded the solution file and was confused as to why the
    test passed. Should read instruction more carefully.

commit 7515d88e09faa7725ecb7edc04206c7550e7f3c5
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 20:17:29 2017 -0400

    RPT: r003 30
    
    Modified the regex variables to split the lines
    in the text properly. This took time researching
    how to properly use regex in Ruby. Added a regex
    help section to remind me what each metacharacter does.

commit 8b2d0e5d00e4eacb87b4267f62df28ed2096663a
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 21:14:02 2017 -0400

    RPT: r003 30
    
    Figuring out how to traverse through the lines and
    see how to add spaces to fill the width.
    
    Array manupilation is very powerful in Ruby so figuring out
    the best way to approach this is time consuming.

commit b26408e3b85433d9aaf087298b5eb6ff0acca557
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 21:49:57 2017 -0400

    RPT: r003 26
    
    Fix line_justification to properly replace spacing
    according to specifications. Ran all the rspec tests
    and all passed.
    
    Noticed afterwards that the final line does not need
    to be justified.
    
    Still need to run reek and fix any code smell.

commit e35444290e3e5b8fc34fe7dcbeac7c23f1475f05
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 22:12:24 2017 -0400

    RPT: r003 15
    
    Fixed the following reek errors; UtilityFunction
    and UncommunicativeVaribleName. By splitting the justify_line
    function to perform the length checks elsewhere, that fixed the
    UtilityFunction warning.
    
    By changing the for loop to a while loop so that there was
    no extra variable 'i', that fixed the UncommuncativeVariableName
    warning.

commit 5c5e787c5de6710e25f06d4c4f23a6f3f9170ddf
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 22:39:36 2017 -0400

    RPT: r003 20
    
    Fixed the following reek warnings; DuplicateMethodCall,
    FeatureEnvy and TooManyStatements.
    
    By creating the space_append method, and moving the while
    loop in there, that fixed the TooManyStatements from the
    justify_line method and the DuplicateMethodCall from
    space_location.next.
    
    By creating an init method where all instance variables
    are created, that fixed the FeatureEnvy warning.

commit 5d00638a6c304b116752063e40d47951656ae1f8
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 23:03:29 2017 -0400

    RPT: r003 20
    
    Fixed the following reek warning; TooManyStatements.
    This warning was raised by the justify method. I fixed
    it by modifying and moving certain statements into a
    new function.
    
    Only one more reek warning remaining, ControlParameter.

commit 8d6b99e3f721e6fa09c14593a9251643d751e815
Author: Fernando Enrique Alfaro Campos <falfaroc@uwo.ca>
Date:   Sun Oct 15 23:17:43 2017 -0400

    RPT: r003 10
    
    Fixed the final reek warning; ControlParameter.
    This warning arose from a regex comparison method.
    One can use either '=~' or '.match' to achieve the
    same results. When used '.match', the warning was resolved.

commit af2e2248d1dc14fccd9c213cefed4b1ca8b73102
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 12:56:06 2017 -0400

    RPT: r004 25
    
    Getting simplecov to install using 'bundle install' took a while.
    This is mainly because I was using windows as my host computer and
    it requires 'make' which windows does not natively has. Therefore,
    I had to create a Ubuntu VM in order to get simplecov to download and
    install properly.

commit 0ab9adb421df805906a0607eabb377751d18c86c
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 13:42:20 2017 -0400

    RPT: r004 30
    
    Fixed all the depreciated rspec comparison function 'should'
    to 'to' with prefix of 'expect' at each line. Also, enabled
    'config.raise_errors_for_deprecations' to display all the
    depreciated lines of code with better backtrace'.

commit 271e805bbd4a616edc7ee6a38e1bf1191afd633d
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 14:07:28 2017 -0400

    RPT: r004 12
    
    Completed step 2, 3 and 4. Fixed the depreciation problem prior to reading it
    so that worked out nicely. To show all the lines have been executed, added
    a check that player2 won.
    
    Attempting step 5 now, fixing the reek issues.

commit 6052b2a46958cffbc757594c1ca45033ddd90c96
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 14:54:16 2017 -0400

    RPT: r004 30
    
    Fixed reek warning of attributes by changing attr_accessors to be attr_reader only.
    Fixed IrresponsibleModule from modules Game and Scorer by adding a description to the module.
    Fixed UncommunicativeMethodName by change function names to not include numeric values.
    
    Still need to fix 4 more warnings from reek.

commit 103880054a995c3b7086d318565e11dbeac5692c
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 21:42:22 2017 -0400

    RPT: r004 15
    
    Resolved the UtilityFunction warnings provided by reek. Suppressed the
    NilCheck warning. Spent too much time attempting to solve it, moving
    on for now and attempting it again later.

commit 9d3e900b3f09861cfd8028c04bfbb79a4e1d406b
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 22:05:42 2017 -0400

    RPT: r005 18
    
    Setup Gemfile, rspec and simplecov. Downloaded the appropriate files
    needed for this task. Completed Step 1 and saw that 69.77% of lines
    are covered currently in the tests.

commit bbb5559899bcc1d9f900b3574b8b14b33e677b5c
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 22:34:40 2017 -0400

    RPT: r005 20
    
    Added test case to go through the build_blocks_without_matrix
    function. Simplecov now reports that all lines are executed.
    
    Proceeding to step 4.

commit 8e14aeefbf17f6ee685fa897277f8afb0ff813da
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Oct 23 23:18:23 2017 -0400

    RPT: r005 30
    
    Fixed the following reek warnings; TooManyStatements, InstanceVariableAssumption, TooManyInstanceVariables, and IrresponsibleModule.
    TooManyStatements in the following methods; solved_without_matrix? solved? and build_blocks. Fixed by splitting up functions into smaller functions.
    InstanceVariableAssumption ficed by moving those variables into the initialize function of the module.
    TooManyInstanceVariables fixed by using less of them. Reek only allows 5 instance variables.
    IrresponsibleModule fixed by adding descriptions to the module and class.

commit c06f75ce63a9aef3d4bae98afbceb6b2e0ead38b
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 14:44:24 2017 -0400

    RPT: r005 10
    
    Set up Mac to run reek, rspec and bundle. Realized that developing on a Windows machine
    is too complicated and it doesn't have the same capabilities as Unix/Linux system.
    For example, Windows doesn't have 'make' so that hinders any development.

commit b96148e94f29cbf3d3d28fb7fc841c689500bce0
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 15:32:22 2017 -0400

    RPT: r005 30
    
    Went from 9 reek warnings to 4 reek warnings. Currently, rspec is failing on the final
    test because I am moving and fixing the code to satisfy reek.
    Most of the reek warnings were fixed by moving and splitting up code to satisfy
    TooManyParameters or NestedLoops.

commit c429aa2184043af599affce7217f142c79af566b
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 16:21:14 2017 -0400

    RPT: r005 30
    
    Split up the master class of board into two more classes 'WithMatrix' and 'NoMatrix'.
    Both these new classes inherit from 'Board' but now it is easier to keep track which
    type of sudoku solution we are using.
    Solved the many of the UtilityFunction warnings from reek by splitting up the classes
    and creating instance variables to handle them.
    Simplecov still covers 100% of the code. Rspec successfully passes all 4 test and
    there are no longer any reek errors.

commit cb3f3d4b77d1fdeefe36d3ab244f8b8bb0548066
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 16:46:58 2017 -0400

    RPT: r006 15
    
    Completed Step 1 from the description. Downloaded heap_sort.rb, setup my project
    to handle rspec and simplecov. Also, created heap_sort_spec.rb that will do all the
    rspec testing. Currently does not do anything but just there as template.

commit 8d0d02429bfc9cef6f0b8d5ca5a3bdd5b31118d0
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 17:14:16 2017 -0400

    RPT: r006 15
    
    Completed Steps 2 and 3. The given example from step 2 covers all but 1 line
    so I added another test with an array of 6 elements so that it covers that
    final line.
    Moving to step 4 to solve all reek warnings.

commit acf3352a0c07fc024c1e0baa9eb0da6141a78d92
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 18:00:20 2017 -0400

    RPT: r006 30
    
    Started with 9 reek warnings and now I am down to one which is a TooManyStatements.
    Similar to previous tasks, most warnings got solved by splitting large functions
    into smaller simple functions. Also, changing the input atttribute to reader and
    added a comment describing what the class does.
    Finishing Step 4 by splitting up the final large function.

commit cf825b5c7b9fdb73f76ff16e8495a9ae520df75a
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 18:11:01 2017 -0400

    RPT: r006 8
    
    Completed Step 4. Ensured that reek does not give any warnings and simplecov
    still reports 100% line coverage. By splitting up the large function 'shift_down',
    I was able to fix the last warning by reek; TooManyStatements.

commit a9ecc75179cf257b64c171fac26e0c983db8f9e8
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 18:47:39 2017 -0400

    RPT: r006 30
    
    Created the ArrayWatcher class to complete step 5. Integrated it with the current
    version of heap_sort to make sure that it still passes the required tests.
    Next going to develop test to ensure that ArrayWatcher is fully covered.

commit 9a5d8b99a0dd3fe2ae592150436c86ed2c850e1e
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Oct 31 19:16:20 2017 -0400

    RPT: r006 22
    
    Added two tests to run only on ArrayWatcher thus completing step 6. The tests just verified that
    the code coverage for ArrayWatcher was 100%.

commit 543aca5438f129b1cc8d97da525737737df206ba
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 7 15:55:20 2017 -0500

    RPT: r007 30
    
    Downloaded quicksort_median_of_three.rb and the spec files necessary to begin development.
    This completes Step 1 of the task and avoided downloading the entire repo.

commit 51923b9d739a412d6725c2e2ef9e47f87f80eae3
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 8 12:02:10 2017 -0500

    RPT: r007 30
    
    Completed step 2. Created 2 new test cases to achieve 100% code coverage.
    One test case ensured that the pivot element in the quicksort would be the middle element.
    The second test case paritions the array if there are more than 20 elements in it.

commit 59ebb5e9170c334f4ed2364ded1084128d0b8bd1
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 8 12:37:55 2017 -0500

    RPT: r007 27
    
    Successfully downloaded and setup mutant to be run on the project.
    Added a timeout to the executable project so that it would break out of infinite loops.

commit 26dbdf39c08748acb03503f4b9c5f7db411f71c7
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 8 13:28:19 2017 -0500

    RPT: r007 30
    
    Understanding how mutant works and developing test cases to satisfy and kill all the mutants.
    Currently standing at 86.18% converage with 85 alive.

commit 4df27f9d24d4dba896ce4f11b83a55209259c7c7
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 8 14:23:16 2017 -0500

    RPT: r007 30
    
    Modifying the choose_pivot calls and tests to kill the remaining mutants from that functions.
    Currently at 87.39% coverage with 84 mutants still alive.

commit db496d8b8ce4450cde2088a58ecff74adc4c138c
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 8 15:18:25 2017 -0500

    RPT: r007 30
    
    Contiune to solve mutant warnings. Lowered the count of alive mutatnts to 58 and increased the coverage to 90.76%.
    Instead of accessing the array using [], the .fetch resolved many of the warnings. Also added a raise_error when
    the hi index is greater than the length of the array.

commit dee80292f3f1083c8948283b23f1cd2edff8d849
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 8 15:39:26 2017 -0500

    RPT: r007 18
    
    Continue to work on mutant warnings. Added test cases for lo > hi, hi out of range and nil input.
    Also, change more array access to be called by .fetch. All this resulted in the alive mutants to
    lower to 41 alive.

commit fedfbd8dda10d0e65c0017272dbe996f245f57ce
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 15 13:59:12 2017 -0500

    RPT: r007 30
    
    Added a new test case that is a three element array and selects the middle element as the pivot point.
    This test case lowered my mutant alive count from 41 to 39. Next going to try and make more test cases
    to lower the alive count where possible.
    At the start was not able to lower alive count more, but just kept trying different cases until it
    occured.

commit afd1fd80fb98c37d23b171e7396d28021aef743c
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 15 14:33:54 2017 -0500

    RPT: r007 30
    
    Added two new test cases;
    1) The input array is inverted and only sorts the last few elements. This results in
    the algorithm choosing a middle pivot point.
    2) The insertionSort function takes an array and only sorts the first couple elements.
    These two cases resulted in lowering the alive count from 39 to 37. Will attempt to see
    if I can resolve anymore mutants.
    At this point it is difficult to come up with test cases that lower the alive count much.

commit 0e2861344ba9dae7e62850b140d74656c0d21da9
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 15 15:10:34 2017 -0500

    RPT: r007 30
    
    Created a test case that calls the quicksort function with a negative lo value and
    returns a sorted array. This test case lowered the mutant alive count from 37 to 28.
    Going to continue and attempt to lower the alive count even further.
    
    At this point the test cases are trial and error because the mutant results can be
    very ambiguous by changing constant values.

commit ab97e6a9494277e8bbefe6823ade7ec0afea43bf
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 15 15:35:00 2017 -0500

    RPT: r007 22
    
    Created a test case that calls quicksort with the same hi and lo value. This case
    lowered the alive count from 28 to 24.
    Ran into the issue of understanding the remaining warnings given by mutant. May
    attempt to lower the alive count but believe that not many more can be killed.

commit 2e7d5c51d1d2ddf8b5324d2762e9eafa0372efe6
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 15 16:14:09 2017 -0500

    RPT: r001 30
    
    Completed step 10 by calculating the correct time and then asserting to ensure that
    only 1 second had elapsed between messages. Still need to run reek to ensure that
    everything still satisfied.
    
    Understanding the problem took a bit of time and properly calculating the elapsed time.

commit ee3f781c8a1084eafa586feecf05dd33f5984a5e
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 15 16:32:31 2017 -0500

    RPT: r001 15
    
    Ensured reek was satisfied by all 3 files. In the test file, split up one of the functions because
    it was getting quite large of a function.

commit be28aeb22c5ac49d016e476f88906d08c72d94f9
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Wed Nov 15 16:59:10 2017 -0500

    RPT: r007 25
    
    Created a test case that calls quicksort with an array if size 21, lo of 10 and hi of 20.
    This test case lowered the alive count from 24 to 19.
    
    There is not much documentation on mutant so attempting to come up with test cases to
    satisfy the last couple warnings is a bit of a challenge.

commit e847e645916d0dbda51930ba985b372a48a205be
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 21 13:54:42 2017 -0500

    RPT: r008 30
    
    Completed steps 1 and 2. I am currently working on step 3. Converting from
    minitest to rspec went smoothly since I was able to base it off the previous
    tasks.

commit 8334b29da54214be25b1c7d47b6ddd84af0a503e
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 21 19:00:48 2017 -0500

    RPT: r008 26
    
    Currently working through Step 3. I have read through the provided documentation
    to understand how to test input and ouput. I have begun to attempt to write
    test cases to fulfill the simplecov coverage. Have not been able to find
    concrete examples on i/o tests using rspec.

commit 13cc9570fa743d81109ee232c3f8e91741593699
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 21 19:37:59 2017 -0500

    RPT: r008 30
    
    Still working on step 3. Currently workingo on developing rspec tests that
    handle i/o. All examples I've seen only handle one specifc i/o but many of the
    functions in nim contain multiple i/o.
    
    Tried different versions of rspec checks but so far none have worked properly.

commit cbb6f57cb3e4d6504f5c7ad252eb642540dc3c94
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 21 20:24:59 2017 -0500

    RPT: r008 30
    
    Still working on step 3. I was able to replicate the stdin in rspec as a user for one test.
    Now that I am able to send in stdin data in rspec, I can proceed to attempt to check stdout
    in a similar fashion.
    
    I got stuck for a bit trying to send in stdin data to the program. There are many different ways that
    are shown online and in the examples that I kept trying all of them and none of them seem to work.
    Luckily the one example shown by Tommasa Pavese worked and fulfulled the sending of stdin
    without modifying the nim.rb code.

commit 3a5e73276538f541d87b65cf19f445fcfee1cbf2
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 21 20:59:02 2017 -0500

    RPT: r008 30
    
    Working on steps 3 and 4 simultaneously. Step 3 in the sense that I still need to handle
    stdout properly, and step 4 in the sense that I am making test to fulfull the 100%
    coverage in simplecov. I am currently at 67.22% covered.
    
    Ran into the issue of not handling stdout properly and test would just break because it would skip
    sections. Working through trying to figure out how to handle stdout.

commit 442001960da877ab40d5ec5434024a1eb4228881
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 21 21:26:30 2017 -0500

    RPT: r008 23
    
    Completed the stdout handling of step 3 and moving to step4 to achieve 100% coverage
    in simplecov. Currently the simplecov covered is 61.47%.
    
    Ran into the obstacle of understanding how rspec handles the expects for stdout. There
    are many different ways to handled and similar to the stdin, all my previous attempts
    failed. Luckily a post on reformatcode.com had a very simple solution that is also
    displayed by Tommaso Pavese.

commit ea7d2cb99dd3238fd6fca845987221aff87acb5d
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Tue Nov 21 21:49:35 2017 -0500

    RPT: r008 20
    
    Working on step 4. Improved the simplecov coverage to 79.74. In order to play an entire game,
    I brute forced the inputs for the user. Need to see if there is any other way to go about
    that.
    
    Not any issues arose other than variable input depending on output has not been looked at.

commit c2fde1e55dcc75578ff491e0dacc191c6398bb48
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 12:24:54 2017 -0500

    RPT: r009 23
    
    Downloaded and added gcd.rb in the r009 folder. Ran cucumber --init to setup the
    appropriate file structure to run cucumber. Copied the features file into that directory.
    
    When I attempted to run cucumber, it did not throw any errors or warnings even though
    the instructions said it would. Need to look into why it is not throwing any issues.

commit bf0c2aa899442aef36eae90238feb4293a65016c
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 12:55:02 2017 -0500

    RPT: r009 27
    
    Figured out why cucumber was not detecting the features file. Turns out that before
    each test you need the 'Scenario:' key word for cucumber to detect it. Without that key
    word, cucumber just displays 0 scenarios, 0 steps.
    
    Next I will be fixing up the scenarios to pass its given steps.

commit 79ad9d4fcd8312769cdfeafc2a2bc5227d07d2a1
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 13:28:25 2017 -0500

    RPT: r009 30
    
    Completed step 3. Created gcd_testing.rb in step_definition that handles the structure
    of the cucumber tests. Also, added the require_relative of gcd.rb in env.rb so that
    cucumber detects the gcd.rb function.
    
    Moving onto the final task for r009.

commit d64d55c0f0802268da31f98ac329cbc18e6a2436
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 13:42:29 2017 -0500

    RPT: r009 11
    
    Completed step 4 that restructured the inputs of the tests to be less tedious
    and better structured.
    
    The resource for this was very easy to follow which resulted in no issues
    during this task.

commit 3aec237af6dba42e9a8a46f35bb0a055ef6b2b70
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 14:07:08 2017 -0500

    RPT: r010 22
    
    Downloaded prime_factors.rb, initialized the required files for cucumber and
    copied over the prime.feature file to the correct location.
    
    Ran into the issue of cucumber displaying a parser error. Turns out that if
    the keyword 'Feature' begins with a lowercase 'f', cucumber is not able to
    detect the tests.

commit 44cbfe4073bfce84c6f52de2074039690a148b25
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 14:39:49 2017 -0500

    RPT: r010 30
    
    Created a prime_testing.rb that handles the step_definitions for the tests.
    Also, modified the testing so that it is done by a table instead of the
    original tedious way.
    
    Need to handle the array return so that it is split into an int array
    instead of a string.

commit 4371e2ea16f6c1bd51073b41650e9e62b6846177
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 14:56:35 2017 -0500

    RPT: r010 13
    
    Completed the final step (step 3) of r010. This was converting the string into
    an integer array so that we can compare the result of the function with what
    we expect.
    
    Ran into the issue of the first element resulting 0 while the rest were fine.
    I solved this by stripping the quotations from the string and then converting
    that into an integer array. It appeared that Ruby would escape the first quotation
    which then when attempting to split the string, the quotation would try to convert to
    an integer and thus resulting it to 0.

commit 5aebb82cb28f2939c154112d971baa45985f8d5c
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Nov 27 15:26:55 2017 -0500

    RPT: r011 27
    
    Completed Step 1. Created the necessary files; Gemfile, beancounting.rb, bean_testing.rb,
    acm00.feature and modified env.rb to link to the correct file. Also, in the testing
    I created an input and output as specified in the question.
    
    Have not considered how the input is going to be handled as of right now but I
    believe the base work is done for input and output.

commit 8f4e30bb2853444fceb45a2bd5305d7fbfefba67
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Dec 4 12:40:24 2017 -0500

    RPT: r011 30
    
    Created beancounting.rb with initializer that takes in the string input of the user.
    Also created/modified the step_definitions to pass in the input to an instance of
    BeanCounting. Lastly, figuredout how to count the number of occurrances of a character
    in a string. Will be using that to determine the winners.

commit d1e25d4d6ef93c735e574bf5cbc0f8bdfc4aec12
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Dec 4 13:18:09 2017 -0500

    RPT: r011 30
    
    Modified the steps file to modify the input and remove the quatations of it.
    Currently, I am figuring out how to properly split the guesses into the correct
    Hash tables.
    
    I had an issue of understanding and using the .split() function. When the input
    was passed to the steps file, it treated it as an array of characters as opposed
    to a string. Therefore, to properly split I had to use single quotes for characters.

commit f25c0523c9504f9098050a9da3ea353f9b39045e
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Dec 4 13:52:18 2017 -0500

    RPT: r011 30
    
    Created a double hash map to split and handle the inputs. Now depending on the guesser and guess
    for each bean, the value can be retrieved.
    
    Moving to calculating the comparing of beans and guesses to choose a winner.

commit f1ebdeb1918d31c61f9bdfdb8c880766ee6229a6
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Dec 4 14:29:16 2017 -0500

    RPT: r011 30
    
    At the start I was stuck on understanding the problem at hand. Was confusing number of guesses with
    total value guessed by the contestants. After reading it a couple of times, I was able to figure out
    my error and calculations. Currently, creating a map to hold the number of beans in the jar and with
    that I will be able to caluculate the shares.

commit f5bb69689db62600cdac489877037e4b4e9413c0
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Dec 4 15:06:01 2017 -0500

    RPT: r011 30
    
    Keeping track of the total_shares and the total_guesses for later calculation. Changed
    storage of beans count to be a hash map for easy comparison. Properly calucalated the shares
    for each contestant.
    
    Previously had not worked much with Hash maps in Ruby so re-learning it took some time.

commit 659496b0762b2445782ca15c6955505ee45e9321
Author: Fernando Campos <falfaroc@uwo.ca>
Date:   Mon Dec 4 15:50:25 2017 -0500

    RPT: r011 30
    
    Calculated the results for each of the contestants and their shares. Constructed a string
    that returned when message_count is called but the user and compares using cucumber.
    
    When passing the output string to the steps_definition, newlines do not appear to be escaped
    so I was stuck trying to figure out what was I doing wrong. I resulted in calling .split
    on newlines and constructing a final string with the expected structure.
