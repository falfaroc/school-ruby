1c1
< total time reported is: 1157.0
---
> total time reported is: 1339.0
535a536,618
> 
> commit fedfbd8dda10d0e65c0017272dbe996f245f57ce
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Wed Nov 15 13:59:12 2017 -0500
> 
>     RPT: r007 30
>     
>     Added a new test case that is a three element array and selects the middle element as the pivot point.
>     This test case lowered my mutant alive count from 41 to 39. Next going to try and make more test cases
>     to lower the alive count where possible.
>     At the start was not able to lower alive count more, but just kept trying different cases until it
>     occured.
> 
> commit afd1fd80fb98c37d23b171e7396d28021aef743c
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Wed Nov 15 14:33:54 2017 -0500
> 
>     RPT: r007 30
>     
>     Added two new test cases;
>     1) The input array is inverted and only sorts the last few elements. This results in
>     the algorithm choosing a middle pivot point.
>     2) The insertionSort function takes an array and only sorts the first couple elements.
>     These two cases resulted in lowering the alive count from 39 to 37. Will attempt to see
>     if I can resolve anymore mutants.
>     At this point it is difficult to come up with test cases that lower the alive count much.
> 
> commit 0e2861344ba9dae7e62850b140d74656c0d21da9
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Wed Nov 15 15:10:34 2017 -0500
> 
>     RPT: r007 30
>     
>     Created a test case that calls the quicksort function with a negative lo value and
>     returns a sorted array. This test case lowered the mutant alive count from 37 to 28.
>     Going to continue and attempt to lower the alive count even further.
>     
>     At this point the test cases are trial and error because the mutant results can be
>     very ambiguous by changing constant values.
> 
> commit ab97e6a9494277e8bbefe6823ade7ec0afea43bf
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Wed Nov 15 15:35:00 2017 -0500
> 
>     RPT: r007 22
>     
>     Created a test case that calls quicksort with the same hi and lo value. This case
>     lowered the alive count from 28 to 24.
>     Ran into the issue of understanding the remaining warnings given by mutant. May
>     attempt to lower the alive count but believe that not many more can be killed.
> 
> commit 2e7d5c51d1d2ddf8b5324d2762e9eafa0372efe6
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Wed Nov 15 16:14:09 2017 -0500
> 
>     RPT: r001 30
>     
>     Completed step 10 by calculating the correct time and then asserting to ensure that
>     only 1 second had elapsed between messages. Still need to run reek to ensure that
>     everything still satisfied.
>     
>     Understanding the problem took a bit of time and properly calculating the elapsed time.
> 
> commit ee3f781c8a1084eafa586feecf05dd33f5984a5e
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Wed Nov 15 16:32:31 2017 -0500
> 
>     RPT: r001 15
>     
>     Ensured reek was satisfied by all 3 files. In the test file, split up one of the functions because
>     it was getting quite large of a function.
> 
> commit be28aeb22c5ac49d016e476f88906d08c72d94f9
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Wed Nov 15 16:59:10 2017 -0500
> 
>     RPT: r007 25
>     
>     Created a test case that calls quicksort with an array if size 21, lo of 10 and hi of 20.
>     This test case lowered the alive count from 24 to 19.
>     
>     There is not much documentation on mutant so attempting to come up with test cases to
>     satisfy the last couple warnings is a bit of a challenge.
