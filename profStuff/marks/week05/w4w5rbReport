1c1
< total time reported is: 772.0
---
> total time reported is: 962.0
372a373,469
> 
> commit c06f75ce63a9aef3d4bae98afbceb6b2e0ead38b
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 14:44:24 2017 -0400
> 
>     RPT: r005 10
>     
>     Set up Mac to run reek, rspec and bundle. Realized that developing on a Windows machine
>     is too complicated and it doesn't have the same capabilities as Unix/Linux system.
>     For example, Windows doesn't have 'make' so that hinders any development.
> 
> commit b96148e94f29cbf3d3d28fb7fc841c689500bce0
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 15:32:22 2017 -0400
> 
>     RPT: r005 30
>     
>     Went from 9 reek warnings to 4 reek warnings. Currently, rspec is failing on the final
>     test because I am moving and fixing the code to satisfy reek.
>     Most of the reek warnings were fixed by moving and splitting up code to satisfy
>     TooManyParameters or NestedLoops.
> 
> commit c429aa2184043af599affce7217f142c79af566b
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 16:21:14 2017 -0400
> 
>     RPT: r005 30
>     
>     Split up the master class of board into two more classes 'WithMatrix' and 'NoMatrix'.
>     Both these new classes inherit from 'Board' but now it is easier to keep track which
>     type of sudoku solution we are using.
>     Solved the many of the UtilityFunction warnings from reek by splitting up the classes
>     and creating instance variables to handle them.
>     Simplecov still covers 100% of the code. Rspec successfully passes all 4 test and
>     there are no longer any reek errors.
> 
> commit cb3f3d4b77d1fdeefe36d3ab244f8b8bb0548066
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 16:46:58 2017 -0400
> 
>     RPT: r006 15
>     
>     Completed Step 1 from the description. Downloaded heap_sort.rb, setup my project
>     to handle rspec and simplecov. Also, created heap_sort_spec.rb that will do all the
>     rspec testing. Currently does not do anything but just there as template.
> 
> commit 8d0d02429bfc9cef6f0b8d5ca5a3bdd5b31118d0
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 17:14:16 2017 -0400
> 
>     RPT: r006 15
>     
>     Completed Steps 2 and 3. The given example from step 2 covers all but 1 line
>     so I added another test with an array of 6 elements so that it covers that
>     final line.
>     Moving to step 4 to solve all reek warnings.
> 
> commit acf3352a0c07fc024c1e0baa9eb0da6141a78d92
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 18:00:20 2017 -0400
> 
>     RPT: r006 30
>     
>     Started with 9 reek warnings and now I am down to one which is a TooManyStatements.
>     Similar to previous tasks, most warnings got solved by splitting large functions
>     into smaller simple functions. Also, changing the input atttribute to reader and
>     added a comment describing what the class does.
>     Finishing Step 4 by splitting up the final large function.
> 
> commit cf825b5c7b9fdb73f76ff16e8495a9ae520df75a
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 18:11:01 2017 -0400
> 
>     RPT: r006 8
>     
>     Completed Step 4. Ensured that reek does not give any warnings and simplecov
>     still reports 100% line coverage. By splitting up the large function 'shift_down',
>     I was able to fix the last warning by reek; TooManyStatements.
> 
> commit a9ecc75179cf257b64c171fac26e0c983db8f9e8
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 18:47:39 2017 -0400
> 
>     RPT: r006 30
>     
>     Created the ArrayWatcher class to complete step 5. Integrated it with the current
>     version of heap_sort to make sure that it still passes the required tests.
>     Next going to develop test to ensure that ArrayWatcher is fully covered.
> 
> commit 9a5d8b99a0dd3fe2ae592150436c86ed2c850e1e
> Author: Fernando Campos <falfaroc@uwo.ca>
> Date:   Tue Oct 31 19:16:20 2017 -0400
> 
>     RPT: r006 22
>     
>     Added two tests to run only on ArrayWatcher thus completing step 6. The tests just verified that
>     the code coverage for ArrayWatcher was 100%.
