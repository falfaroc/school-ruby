FIRST QUIZ: CS4472A Tuesday, 3 October 2017, 7:10 pm, Room MC17

NAME AS APPEARS ON STUDENT ID:

STUDENT ID NUMBER:

UWO/CONFLUENCE USER NAME:

REMINDERS:
** (from course outline) The quiz is closed book, 
   closed notes, with no electronic devices allowed, with particular 
   reference to any electronic devices that are capable of communication 
   and/or storing information.

** Write neatly.  If the marker can't read it, it is wrong.

** This quiz shouldn't take long to write.  On the other hand, time
   will pass.  It is a 30 minute quiz with 20 questions.  If you complete 
   a question every  minute you will still have 10 minutes at the end to 
   double check that everything is in order.

** While you are not allowed to open the exam booklet until the
   proctor says you can, you can fill out the information on the cover
   page.  You should also get out your student id and make sure your
   pencils and pens are in order.  If you need to get something out of
   your jacket or knapsack once the exam has started, raise your hand
   and wait til a proctor comes to you to oversee the matter.

QUESTION 1: To illustrate the relation between testing and software
design, we will look at the programming technique ANSWER
ANSWER= test driven development

QUESTION 2: An important concept we will look at related to the question
of when has one done enough testing is ANSWER
ANSWER= coverage
ANSWER= mutation

QUESTION 3: It is easy to make up test inputs, but it can be tricky to
know what the right output for a given input should be. This is refered
to as the ANSWER problem
ANSWER= Oracle

QUESTION 4: Testing is generally about finding errors that have already
been made. This course also covers the topic of ANSWER, which is about
trying to prevent errors from being made in the first place.
ANSWER= quality assurance

QUESTION 5: The first testing framework for Ruby that we are looking at
is called ANSWER
ANSWER= minitest

QUESTION 6: The first tool for checking code quality for programs written
in Ruby is ANSWER, which is described as a code smell detector.
ANSWER= reek

QUESTION 7: The number of quizzes CS4472 will have this semester is
ANSWER
ANSWER= 3

QUESTION 8: The number of weekly practices that CS4472 will have this
semester is ANSWER
ANSWER= 10

QUESTION 9: The number of practice reviews that CS4472 will have this
semester is ANSWER
ANSWER= 4

QUESTION 10: The per cent of the total mark allocated for all the quizzes
is ANSWER
ANSWER= 21

QUESTION 11: The per cent of the total mark allocated for all the weekly
practices is ANSWER
ANSWER= 30

QUESTION 12: The per cent of the total mark allocated for all the
practice reviews is ANSWER
ANSWER= 49

QUESTION 13: The practice technique advocated in this class is a
modification of the ANSWER
ANSWER= Personal Software Process

QUESTION 14: A main theme behind the practice technique advocated in this
class is that in order to improve your programming, ANSWER
ANSWER= you need data about your past programming

QUESTION 15: A common piece of information for people interested in
programmer productivity to track is ANSWER
ANSWER= time spent
ANSWER= number of lines of code written
ANSWER= number of defects found

QUESTION 16: Although we often think of programs as taking inputs and
producing outputs, a higher level view of what is going on is to think of
the programs as ANSWER about how to take inputs and produce outputs.
ANSWER= encode knowledge

QUESTION 17: The scripts that were designed to aid the practice process
assume that you will be uploading a copy of your work to BitBucket every
time you ANSWER
ANSWER= record a note about your practice progress

QUESTION 18: The protocols for practice expect that the longest amount of
time that you will practice before recording a note is ANSWER
ANSWER= 30 minutes

QUESTION 19: The total amount of practice time you can get credit for
during a practice week is ANSWER
ANSWER= 3 hours

QUESTION 20: The four phases of testing (according to Whittaker) are: 1)
modeling the software environment, 2) selecting test cases, 3) running
and checking test cases, and 4) ANSWER
ANSWER= checking how well the testing is going

QUESTION 21: The testing technique called boundary value partition starts
with the notion of breaking the space of inputs into ANSWER
ANSWER= regions of interest

QUESTION 22: Structural testing is another name for ANSWER
ANSWER= code-based testing
ANSWER= white-box testing

QUESTION 23: The kind of testing we do to make sure that when we change a
program we do not break something that used to work is called ANSWER
ANSWER= regression testing

QUESTION 24: Using combinatorial testing, if I have 10 binary inputs, I
only need to use ANSWER test cases (each a setting of each of the 10
inputs) to expect to find 98 per cent of the errors in the program.
ANSWER= 13

QUESTION 25: The ANSWER is a method developed by Watt S. Humphrey to help
individuals improve their programming skills based on existing methods
that had been developed to help organizations improve their product
development capabilities.
ANSWER= Personal Software Process

QUESTION 26: The paper Orthogonal defect classification-a concept for
in-process measurements was an example of people at IBM analyzing records
of defects in order to ANSWER
ANSWER= improve their process

QUESTION 27: When multiple methods of a class have the same parameters,
this is a code smell called ANSWER
ANSWER= data clumping

QUESTION 28: When multiple methods of a class have the same parameters,
that generally indicates that those parameters should ANSWER
ANSWER= be put into a class of their own

QUESTION 29: MicroTest (MiniTest subset) discourages the writing of tests
that depend on side-effects of the previous test by ANSWER
ANSWER= running tests in random order

QUESTION 30: MicroTest (MiniTest subset)'s usage pattern is for the test
class to inherit from Test so that Class.inherited can be used to ANSWER
ANSWER= get a list of test classes

QUESTION 31: MicroTest (MiniTest subset) uses public_instance_methods to
ANSWER
ANSWER= find methods that begin test\_

QUESTION 32: The TDD Cycle is ANSWER
ANSWER= Red Green Refactor

QUESTION 33: RSpec specifications are sometimes called ANSWER
documentation
ANSWER= executable

QUESTION 34: Unlike MiniTest which is implemented as a class library,
RSpec is implemented in Ruby as an ANSWER
ANSWER= domain-specific language
ANSWER= DSL

QUESTION 35: RSpec and Cucumber are tools designed to support the ANSWER
style of software development
ANSWER= Behavior-driven development
ANSWER= BDD

QUESTION 36: The differences between RSpec and Cucumber result from the
intent that Cucumber test files are meant to be readable by ANSWER
ANSWER= the customer and the programmer

QUESTION 37: The differences between RSpec and Cucumber result from the
intent that RSpec test files are meant to be readable by ANSWER
ANSWER= just the programmer

QUESTION 38: The Capability Maturity Model for US government contractors
distinguishes 5 levels of company software development process. Level 1
is characterized as ANSWER
ANSWER= chaotic
ANSWER= ad hoc

QUESTION 39: The Capability Maturity Model for US government contractors
distinguishes 5 levels of company software development process. Level 5
is characterized as ANSWER
ANSWER= continually improving

QUESTION 40: Many of the ideas of the Capability Maturity Model were
adapted to individual developers under the name ANSWER
ANSWER= Personal Software Process

QUESTION 41: In the Testing Maturity Model, at Level 5, we aim at ANSWER
rather than defect detection
ANSWER= defect prevention

QUESTION 42: The corporate policy of developers merging their working
copies into the main line of the branch repository several times a day is
called ANSWER
ANSWER= continuous integration

QUESTION 43: The motivation behind multiple merges per day per developer
is to ANSWER
ANSWER= minimize merge conflicts

QUESTION 44: The pattern where you create an object whose job is to
create other objects (rather than using new to create other objects) is
called ANSWER
ANSWER= the factory pattern

QUESTION 45: While the notation looks odd, in RSpec, it is actually
implemented in Ruby as an ANSWER
ANSWER= method

QUESTION 46: In MiniTest, we write test classes that inherit from Test,
but in RSpec these test classes are actually being created at runtime by
ANSWER
ANSWER= describe

QUESTION 47: Once RSpec has created a test class, it fills in its
definition by executing the Ruby method ANSWER
ANSWER= module_exec

QUESTION 48: When I say that in RSpec, expect x.to eq y, eq an object
that inherits from ANSWER, meeting the requirements of to
ANSWER= Matcher

QUESTION 49: Modified condition/decision coverage is often a requirement
(regulatory or contractual) in ANSWER
ANSWER= safety-critical applications
ANSWER= avonic systems
ANSWER= automotive systems

QUESTION 50: The four requirements of MC/DC are: 1) each entry and exit
point is invoked, 2) each decision takes every possible outcome, 3) each
condition in a decision takes every possible outcome, and 4) ANSWER
ANSWER= each condition in a decision is shown to independently affect the outcome of a decision

QUESTION 51: One study of 198 user major failure reports on 5 widely used
distributed systems found statement coverage testing could have caught
nearly ANSWER of the causes.
ANSWER= a quarter
ANSWER= 25 per cent
ANSWER= 23 per cent

QUESTION 52: One study of 198 user major failure reports on 5 widely used
distributed systems found that nearly all failures were caused by coding
mistakes in ANSWER
ANSWER= the error handling code

QUESTION 53: One study of 100 large open source Java programs compared
better code coverage with number of post-release defect reports and found
ANSWER
ANSWER= no connection

QUESTION 54: A study by Ahmed et al found that the probability of errors
in untested code was ANSWER the probability of errors in tested code
ANSWER= twice

QUESTION 55: The S in Solid stands for ANSWER
ANSWER= single responsibility principle

QUESTION 56: The O in SOLID stands for ANSWER
ANSWER= open/closed principle

QUESTION 57: The L in SOLID stands for ANSWER
ANSWER= Liskov substition principle

QUESTION 58: The I in SOLID stands for ANSWER
ANSWER= interface segregation principle

QUESTION 59: The D in SOLID stands for ANSWER
ANSWER= dependency inversion principle

QUESTION 60: According to Robert Martin who first promoted the SOLID
methodology, the S doesn't refer to functions, but to ANSWER
ANSWER= roles in the business that uses the software

QUESTION 61: According to Michael Feathers, code that is difficult to
test is ANSWER
ANSWER= poorly designed
