FIRST QUIZ: CS4472A Tuesday, 3 October 2017, 7:10 pm, Room MC17

NAME AS APPEARS ON STUDENT ID:

STUDENT ID NUMBER:

UWO/CONFLUENCE USER NAME:

REMINDERS:
** (from course outline) The quiz is closed book, 
   closed notes, with no electronic devices allowed, with particular 
   reference to any electronic devices that are capable of communication 
   and/or storing information.

** Write neatly.  If the marker can't read it, it is wrong.

** This quiz shouldn't take long to write.  On the other hand, time
   will pass.  It is a 30 minute quiz with 20 questions.  If you complete 
   a question every  minute you will still have 10 minutes at the end to 
   double check that everything is in order.

** While you are not allowed to open the exam booklet until the
   proctor says you can, you can fill out the information on the cover
   page.  You should also get out your student id and make sure your
   pencils and pens are in order.  If you need to get something out of
   your jacket or knapsack once the exam has started, raise your hand
   and wait til a proctor comes to you to oversee the matter.

QUESTION 1: MicroTest (MiniTest subset) uses public_instance_methods to
ANSWER
ANSWER=

QUESTION 2: The motivation behind multiple merges per day per developer
is to ANSWER
ANSWER=

QUESTION 3: The corporate policy of developers merging their working
copies into the main line of the branch repository several times a day is
called ANSWER
ANSWER=

QUESTION 4: The D in SOLID stands for ANSWER
ANSWER=

QUESTION 5: One study of 198 user major failure reports on 5 widely used
distributed systems found that nearly all failures were caused by coding
mistakes in ANSWER
ANSWER=

QUESTION 6: The four phases of testing (according to Whittaker) are: 1)
modeling the software environment, 2) selecting test cases, 3) running
and checking test cases, and 4) ANSWER
ANSWER=

QUESTION 7: Many of the ideas of the Capability Maturity Model were
adapted to individual developers under the name ANSWER
ANSWER=

QUESTION 8: One study of 198 user major failure reports on 5 widely used
distributed systems found statement coverage testing could have caught
nearly ANSWER of the causes.
ANSWER=

QUESTION 9: While the notation looks odd, in RSpec, it is actually
implemented in Ruby as an ANSWER
ANSWER=

QUESTION 10: Using combinatorial testing, if I have 10 binary inputs, I
only need to use ANSWER test cases (each a setting of each of the 10
inputs) to expect to find 98 per cent of the errors in the program.
ANSWER=

QUESTION 11: The Capability Maturity Model for US government contractors
distinguishes 5 levels of company software development process. Level 5
is characterized as ANSWER
ANSWER=

QUESTION 12: The paper Orthogonal defect classification-a concept for
in-process measurements was an example of people at IBM analyzing records
of defects in order to ANSWER
ANSWER=

QUESTION 13: It is easy to make up test inputs, but it can be tricky to
know what the right output for a given input should be. This is refered
to as the ANSWER problem
ANSWER=

QUESTION 14: In the Testing Maturity Model, at Level 5, we aim at ANSWER
rather than defect detection
ANSWER=

QUESTION 15: One study of 100 large open source Java programs compared
better code coverage with number of post-release defect reports and found
ANSWER
ANSWER=

QUESTION 16: A study by Ahmed et al found that the probability of errors
in untested code was ANSWER the probability of errors in tested code
ANSWER=

QUESTION 17: The scripts that were designed to aid the practice process
assume that you will be uploading a copy of your work to BitBucket every
time you ANSWER
ANSWER=

QUESTION 18: The pattern where you create an object whose job is to
create other objects (rather than using new to create other objects) is
called ANSWER
ANSWER=

QUESTION 19: MicroTest (MiniTest subset)'s usage pattern is for the test
class to inherit from Test so that Class.inherited can be used to ANSWER
ANSWER=

QUESTION 20: Testing is generally about finding errors that have already
been made. This course also covers the topic of ANSWER, which is about
trying to prevent errors from being made in the first place.
ANSWER=

QUESTION 21: The total amount of practice time you can get credit for
during a practice week is ANSWER
ANSWER=

QUESTION 22: According to Robert Martin who first promoted the SOLID
methodology, the S doesn't refer to functions, but to ANSWER
ANSWER=

QUESTION 23: RSpec and Cucumber are tools designed to support the ANSWER
style of software development
ANSWER=

QUESTION 24: The Capability Maturity Model for US government contractors
distinguishes 5 levels of company software development process. Level 1
is characterized as ANSWER
ANSWER=

QUESTION 25: The practice technique advocated in this class is a
modification of the ANSWER
ANSWER=

QUESTION 26: When multiple methods of a class have the same parameters,
this is a code smell called ANSWER
ANSWER=

QUESTION 27: The protocols for practice expect that the longest amount of
time that you will practice before recording a note is ANSWER
ANSWER=

QUESTION 28: When multiple methods of a class have the same parameters,
that generally indicates that those parameters should ANSWER
ANSWER=

QUESTION 29: The per cent of the total mark allocated for all the weekly
practices is ANSWER
ANSWER=

QUESTION 30: The number of quizzes CS4472 will have this semester is
ANSWER
ANSWER=

QUESTION 31: When I say that in RSpec, expect x.to eq y, eq an object
that inherits from ANSWER, meeting the requirements of to
ANSWER=

QUESTION 32: Modified condition/decision coverage is often a requirement
(regulatory or contractual) in ANSWER
ANSWER=

QUESTION 33: To illustrate the relation between testing and software
design, we will look at the programming technique ANSWER
ANSWER=

QUESTION 34: The number of weekly practices that CS4472 will have this
semester is ANSWER
ANSWER=

QUESTION 35: The S in Solid stands for ANSWER
ANSWER=

QUESTION 36: A main theme behind the practice technique advocated in this
class is that in order to improve your programming, ANSWER
ANSWER=

QUESTION 37: Structural testing is another name for ANSWER
ANSWER=

QUESTION 38: The differences between RSpec and Cucumber result from the
intent that RSpec test files are meant to be readable by ANSWER
ANSWER=

QUESTION 39: The O in SOLID stands for ANSWER
ANSWER=

QUESTION 40: According to Michael Feathers, code that is difficult to
test is ANSWER
ANSWER=

QUESTION 41: Unlike MiniTest which is implemented as a class library,
RSpec is implemented in Ruby as an ANSWER
ANSWER=

QUESTION 42: Although we often think of programs as taking inputs and
producing outputs, a higher level view of what is going on is to think of
the programs as ANSWER about how to take inputs and produce outputs.
ANSWER=

QUESTION 43: An important concept we will look at related to the question
of when has one done enough testing is ANSWER
ANSWER=

QUESTION 44: MicroTest (MiniTest subset) discourages the writing of tests
that depend on side-effects of the previous test by ANSWER
ANSWER=

QUESTION 45: The four requirements of MC/DC are: 1) each entry and exit
point is invoked, 2) each decision takes every possible outcome, 3) each
condition in a decision takes every possible outcome, and 4) ANSWER
ANSWER=

QUESTION 46: The kind of testing we do to make sure that when we change a
program we do not break something that used to work is called ANSWER
ANSWER=

QUESTION 47: The I in SOLID stands for ANSWER
ANSWER=

QUESTION 48: The first testing framework for Ruby that we are looking at
is called ANSWER
ANSWER=

QUESTION 49: Once RSpec has created a test class, it fills in its
definition by executing the Ruby method ANSWER
ANSWER=

QUESTION 50: The ANSWER is a method developed by Watt S. Humphrey to help
individuals improve their programming skills based on existing methods
that had been developed to help organizations improve their product
development capabilities.
ANSWER=

QUESTION 51: The per cent of the total mark allocated for all the
practice reviews is ANSWER
ANSWER=

QUESTION 52: The TDD Cycle is ANSWER
ANSWER=

QUESTION 53: A common piece of information for people interested in
programmer productivity to track is ANSWER
ANSWER=

QUESTION 54: The testing technique called boundary value partition starts
with the notion of breaking the space of inputs into ANSWER
ANSWER=

QUESTION 55: In MiniTest, we write test classes that inherit from Test,
but in RSpec these test classes are actually being created at runtime by
ANSWER
ANSWER=

QUESTION 56: The per cent of the total mark allocated for all the quizzes
is ANSWER
ANSWER=

QUESTION 57: The L in SOLID stands for ANSWER
ANSWER=

QUESTION 58: RSpec specifications are sometimes called ANSWER
documentation
ANSWER=

QUESTION 59: The differences between RSpec and Cucumber result from the
intent that Cucumber test files are meant to be readable by ANSWER
ANSWER=

QUESTION 60: The first tool for checking code quality for programs
written in Ruby is ANSWER, which is described as a code smell detector.
ANSWER=

QUESTION 61: The number of practice reviews that CS4472 will have this
semester is ANSWER
ANSWER=

exam_database_file= examdatabase.json
exam_format= plain
dump_database= false
line_width= 72
question_count= 173
create_exam= false
answer_key= true
sample_seed= 222
shuffle_seed= 2345
["C1", "C2", "C3", "C4", "C5", "C6"]
["C1", "C2", "C3", "C4", "C5", "C6"]
---------------

ANSWER 1= find methods that begin test\_

ANSWER 2= minimize merge conflicts

ANSWER 3= continuous integration

ANSWER 4= dependency inversion principle

ANSWER 5= the error handling code

ANSWER 6= checking how well the testing is going

ANSWER 7= Personal Software Process

ANSWER 8= a quarter
ANSWER 8= 25 per cent
ANSWER 8= 23 per cent

ANSWER 9= method

ANSWER 10= 13

ANSWER 11= continually improving

ANSWER 12= improve their process

ANSWER 13= Oracle

ANSWER 14= defect prevention

ANSWER 15= no connection

ANSWER 16= twice

ANSWER 17= record a note about your practice progress

ANSWER 18= the factory pattern

ANSWER 19= get a list of test classes

ANSWER 20= quality assurance

ANSWER 21= 3 hours

ANSWER 22= roles in the business that uses the software

ANSWER 23= Behavior-driven development
ANSWER 23= BDD

ANSWER 24= chaotic
ANSWER 24= ad hoc

ANSWER 25= Personal Software Process

ANSWER 26= data clumping

ANSWER 27= 30 minutes

ANSWER 28= be put into a class of their own

ANSWER 29= 30

ANSWER 30= 3

ANSWER 31= Matcher

ANSWER 32= safety-critical applications
ANSWER 32= avonic systems
ANSWER 32= automotive systems

ANSWER 33= test driven development

ANSWER 34= 10

ANSWER 35= single responsibility principle

ANSWER 36= you need data about your past programming

ANSWER 37= code-based testing
ANSWER 37= white-box testing

ANSWER 38= just the programmer

ANSWER 39= open/closed principle

ANSWER 40= poorly designed

ANSWER 41= domain-specific language
ANSWER 41= DSL

ANSWER 42= encode knowledge

ANSWER 43= coverage
ANSWER 43= mutation

ANSWER 44= running tests in random order

ANSWER 45= each condition in a decision is shown to independently affect the outcome of a decision

ANSWER 46= regression testing

ANSWER 47= interface segregation principle

ANSWER 48= minitest

ANSWER 49= module_exec

ANSWER 50= Personal Software Process

ANSWER 51= 49

ANSWER 52= Red Green Refactor

ANSWER 53= time spent
ANSWER 53= number of lines of code written
ANSWER 53= number of defects found

ANSWER 54= regions of interest

ANSWER 55= describe

ANSWER 56= 21

ANSWER 57= Liskov substition principle

ANSWER 58= executable

ANSWER 59= the customer and the programmer

ANSWER 60= reek

ANSWER 61= 4
